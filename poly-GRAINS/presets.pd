#N canvas 81 0 1151 658 12;
#N canvas 219 115 978 510 list-allinoneline 0;
#X text 40 5 info per lijn in textfile: presetnummer normal/usedfile/array
+ bestemming (abstraction name + argument);
#X msg 37 78 1 normal 1-name 0 0 0 16 usedfile 1-path 0 0 0 ProgramFiles/pd
array 1-array 0 0 0 1 2 3 4 5;
#X msg 51 170 5 1 1 1 1 1 3 2 2 2 4 3 3 3 3;
#X obj 153 256 list split 1;
#X obj 88 300 list split;
#X obj 51 209 t l l;
#X obj 42 258 list split 1;
#X obj 88 397 print;
#X obj 174 452 print;
#X obj 323 365 spigot;
#X obj 492 309 bang;
#X msg 492 334 1;
#X msg 369 313 0;
#X msg 408 413 set;
#X obj 416 374 t b b;
#X msg 345 455;
#X obj 267 391 list prepend add2;
#X obj 267 416 list trim;
#X obj 344 484 print;
#N canvas 116 31 673 426 example3 0;
#X obj 19 287 list split 1;
#X obj 19 204 until;
#X obj 19 242 list append;
#X obj 149 287 bang;
#X msg 45 148 1 2 3 4 a b c;
#X text 34 21 example 3: serializing a message without delays;
#X text 17 55 The "until" object can be used as shown to iterate through
all the items of a list.;
#X text 178 147 <- click to test;
#X text 101 171 First store list \, then start the loop;
#X text 118 199 "until" bangs its output until told to stop by a "bang"
to its right inlet.;
#X text 137 241 Store the remaining list.;
#X text 194 286 third outlet of "split" tells us to stop.;
#X text 67 318 Second outlet of "split" becomes the new list for "list
append" above.;
#X text 75 377 First outlet is the output.;
#X obj 72 105 inlet;
#X obj 19 378 outlet;
#X obj 45 171 t b a;
#X connect 0 0 15 0;
#X connect 0 1 2 1;
#X connect 0 2 3 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 1 1;
#X connect 4 0 16 0;
#X connect 14 0 16 0;
#X connect 16 0 1 0;
#X connect 16 1 2 1;
#X restore 373 199 pd example3;
#X obj 362 255 t a a;
#X obj 395 226 print p;
#X obj 349 160 t b a;
#X obj 399 284 select (!.);
#X msg 349 127 (!.) 1 1 1 1 1 (!.) 2 2 2 (!.) 3 3 3 3;
#X msg 509 181 (()) usedfile tosend program files/abunch033;
#X connect 2 0 5 0;
#X connect 3 0 4 1;
#X connect 4 0 7 0;
#X connect 4 1 5 0;
#X connect 5 0 6 0;
#X connect 5 1 3 0;
#X connect 6 1 4 0;
#X connect 9 0 16 0;
#X connect 10 0 11 0;
#X connect 11 0 9 1;
#X connect 12 0 9 1;
#X connect 12 0 14 0;
#X connect 13 0 15 0;
#X connect 14 0 13 0;
#X connect 14 1 15 0;
#X connect 15 0 18 0;
#X connect 16 0 17 0;
#X connect 17 0 15 0;
#X connect 19 0 20 0;
#X connect 20 0 9 0;
#X connect 20 1 23 0;
#X connect 22 0 14 0;
#X connect 22 1 19 0;
#X connect 23 0 12 0;
#X connect 23 1 10 0;
#X connect 24 0 22 0;
#X restore 730 636 pd list-allinoneline;
#N canvas 258 8 759 564 openmodel 0;
#X msg 225 370 1;
#X msg 304 372 2;
#X msg 383 371 3;
#N canvas 374 145 290 189 normal 0;
#X obj 150 39 inlet sendname;
#X obj 31 41 inlet;
#X obj 30 85 pack f s;
#X msg 30 130 \; \$2 \$1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X restore 403 533 pd normal;
#N canvas 551 222 397 230 usedfile 0;
#X obj 38 15 inlet;
#X obj 76 100 inlet;
#N canvas 206 223 794 382 list-12s 0;
#X text 74 4 subpatch based on the abstraction list-12s from list-abs
;
#X msg 327 196 set %s;
#X obj 235 244 t a;
#X obj 118 252 makefilename %s;
#X obj 96 62 t b a b;
#X obj 96 283 symbol;
#X msg 142 22 a b c d 1 2;
#X obj 118 158 route symbol float;
#X obj 118 186 symbol;
#X obj 178 190 makefilename %d;
#X obj 96 21 inlet;
#X obj 96 313 outlet;
#X obj 395 192 makefilename 1%s%%s;
#X msg 395 228 set set \, adddollsym \$1;
#X msg 235 265 set \$1 %s;
#N canvas 0 0 533 407 drip 0;
#X obj 64 206 list split 1;
#X obj 64 123 until;
#X obj 64 181 list append;
#X obj 194 206 bang;
#X text 146 90 First store list \, then start the loop;
#X text 163 118 "until" bangs its output until told to stop by a "bang"
to its right inlet.;
#X text 182 160 Store the remaining list.;
#X text 239 205 third outlet of "split" tells us to stop.;
#X obj 64 243 outlet;
#X obj 64 57 inlet;
#X text 237 44 From list-help.pd;
#X obj 143 243 outlet;
#X obj 64 86 t b a;
#X connect 0 0 8 0;
#X connect 0 1 2 1;
#X connect 0 2 3 0;
#X connect 0 2 11 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 1 1;
#X connect 9 0 12 0;
#X connect 12 0 1 0;
#X connect 12 1 2 1;
#X restore 118 123 pd drip;
#X obj 503 100 makefilename %c;
#X msg 503 78 32;
#X text 539 79 SPACE as ascii;
#X obj 503 54 loadbang;
#X obj 395 165 symbol;
#X connect 1 0 3 0;
#X connect 2 0 14 0;
#X connect 3 0 2 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 4 1 15 0;
#X connect 4 2 1 0;
#X connect 5 0 11 0;
#X connect 6 0 4 0;
#X connect 7 0 8 0;
#X connect 7 1 9 0;
#X connect 8 0 3 0;
#X connect 9 0 3 0;
#X connect 10 0 4 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 3 0;
#X connect 15 0 7 0;
#X connect 16 0 20 0;
#X connect 17 0 16 0;
#X connect 19 0 17 0;
#X connect 20 0 12 0;
#X restore 38 71 pd list-12s;
#X text 139 72 because of space in path names;
#X obj 125 100 inlet;
#X obj 38 132 pack s s f;
#X msg 38 171 \; \$2 \$1 \$3;
#X connect 0 0 2 0;
#X connect 1 0 5 1;
#X connect 2 0 5 0;
#X connect 4 0 5 2;
#X connect 5 0 6 0;
#X restore 168 529 pd usedfile;
#N canvas 200 218 318 192 anarray 0;
#X obj 16 33 inlet;
#X obj 45 107 inlet sendname;
#X obj 16 149 send;
#X obj 204 39 inlet arg2;
#X obj 15 65 list prepend 0;
#X connect 0 0 4 0;
#X connect 1 0 2 1;
#X connect 3 0 4 1;
#X connect 4 0 2 0;
#X restore 269 530 pd anarray;
#X obj 105 48 inlet;
#X obj 159 227 list split 1;
#X text 266 225 first symbol: kind of list (norm(al) - sym(bol) - arr(ay)
;
#X obj 112 134 t l l;
#X obj 225 345 select norm sym arr;
#X obj 21 186 list split 3;
#X text 138 181 first symbol (kind of list) + 2 empty zero values for
possible future new parameters;
#X obj 67 304 list split 1;
#X obj 50 239 t l l;
#N canvas 52 160 643 320 router_1inxout 0;
#X obj 339 23 inlet route123;
#X obj 68 238 outlet;
#X obj 220 194 spigot;
#X obj 149 191 spigot;
#X obj 72 190 spigot;
#X obj 123 110 == 1;
#X obj 271 112 == 3;
#X obj 199 114 == 2;
#X obj 127 142 t b f;
#X obj 202 143 t b f;
#X obj 276 143 t b f;
#X text 51 269 connect 't b f' object if you want inlet route123 to
trigger the output;
#X obj 220 238 outlet;
#X obj 148 235 outlet;
#X obj 290 194 spigot;
#X obj 346 143 t b f;
#X obj 370 194 spigot;
#X obj 426 143 t b f;
#X obj 341 112 == 4;
#X obj 421 112 == 5;
#X obj 45 26 inlet;
#X connect 0 0 6 0;
#X connect 0 0 7 0;
#X connect 0 0 5 0;
#X connect 0 0 18 0;
#X connect 0 0 19 0;
#X connect 2 0 12 0;
#X connect 3 0 13 0;
#X connect 4 0 1 0;
#X connect 5 0 4 1;
#X connect 6 0 2 1;
#X connect 7 0 3 1;
#X connect 18 0 14 1;
#X connect 19 0 16 1;
#X connect 20 0 4 0;
#X connect 20 0 3 0;
#X connect 20 0 2 0;
#X connect 20 0 14 0;
#X connect 20 0 16 0;
#X restore 69 475 pd router_1inxout;
#N canvas 373 93 643 460 router_1inxout 0;
#X obj 339 23 inlet route123;
#X obj 72 335 outlet;
#X obj 220 194 spigot;
#X obj 149 191 spigot;
#X obj 72 190 spigot;
#X obj 123 110 == 1;
#X obj 271 112 == 3;
#X obj 199 114 == 2;
#X obj 127 142 t b f;
#X obj 202 143 t b f;
#X obj 276 143 t b f;
#X text 55 402 connect 't b f' object if you want inlet route123 to
trigger the output;
#X obj 220 238 outlet;
#X obj 148 235 outlet;
#X obj 290 194 spigot;
#X obj 346 143 t b f;
#X obj 370 194 spigot;
#X obj 426 143 t b f;
#X obj 341 112 == 4;
#X obj 421 112 == 5;
#X obj 45 26 inlet;
#X obj 72 286 list split 1;
#X connect 0 0 6 0;
#X connect 0 0 7 0;
#X connect 0 0 5 0;
#X connect 0 0 18 0;
#X connect 0 0 19 0;
#X connect 2 0 12 0;
#X connect 3 0 13 0;
#X connect 4 0 21 0;
#X connect 5 0 4 1;
#X connect 6 0 2 1;
#X connect 7 0 3 1;
#X connect 18 0 14 1;
#X connect 19 0 16 1;
#X connect 20 0 4 0;
#X connect 20 0 3 0;
#X connect 20 0 2 0;
#X connect 20 0 14 0;
#X connect 20 0 16 0;
#X connect 21 0 1 0;
#X restore 239 474 pd router_1inxout;
#X obj 69 404 symbol;
#X obj 225 270 symbol;
#X obj 186 82 print v;
#X obj 110 94 list;
#X obj 88 353 list split 1;
#X msg 174 33 sym 0 0 1-tscry8 hhh;
#N canvas 151 261 351 189 normal 0;
#X obj 131 37 inlet sendname;
#X obj 31 41 inlet;
#X obj 255 37 inlet;
#X obj 30 85 pack f s f;
#X msg 30 130 \; \$2 \$1 \$3;
#X connect 0 0 3 1;
#X connect 1 0 3 0;
#X connect 2 0 3 2;
#X connect 3 0 4 0;
#X restore 67 530 pd normal;
#X obj 561 395 inlet arg2;
#X connect 0 0 15 1;
#X connect 0 0 16 1;
#X connect 1 0 15 1;
#X connect 1 0 16 1;
#X connect 2 0 15 1;
#X connect 2 0 16 1;
#X connect 6 0 20 0;
#X connect 7 0 18 0;
#X connect 9 0 11 0;
#X connect 9 1 7 0;
#X connect 10 0 0 0;
#X connect 10 1 1 0;
#X connect 10 2 2 0;
#X connect 11 1 14 0;
#X connect 13 0 17 0;
#X connect 14 0 21 0;
#X connect 14 1 13 0;
#X connect 15 0 23 1;
#X connect 15 1 4 1;
#X connect 15 2 5 1;
#X connect 16 0 23 0;
#X connect 16 1 4 0;
#X connect 16 2 5 0;
#X connect 17 0 15 0;
#X connect 18 0 10 0;
#X connect 20 0 9 0;
#X connect 21 1 16 0;
#X connect 22 0 20 0;
#X connect 24 0 23 2;
#X connect 24 0 4 2;
#X connect 24 0 5 2;
#X restore 421 619 pd openmodel;
#X obj 305 119 bng 15 250 50 0 empty empty save_preset 17 7 0 10 -258113
-1 -1;
#X obj 22 375 r toextfile;
#X floatatom 305 74 4 1 999 1 number_preset - -;
#X obj 245 192 f;
#X obj 882 466 s savepresetn;
#X obj 305 139 bng 15 250 50 0 empty empty open_preset 17 7 0 10 -262144
-1 -1;
#N canvas 166 19 940 614 vtextfile 0;
#X obj 71 301 textfile;
#X msg 42 27 rewind;
#X msg 42 54 bang;
#X msg 42 82 clear;
#X obj 386 577 outlet;
#X obj 129 377 send;
#X msg 45 151 print;
#X obj 370 442 select empty;
#N canvas 366 166 700 363 rline 0;
#X obj 96 240 outlet;
#X obj 302 170 outlet;
#X msg 199 113 rewind;
#X obj 141 84 until;
#X obj 174 148 f 0;
#X obj 212 150 + 1;
#X obj 121 110 t b b;
#X msg 229 84 0;
#X obj 276 223 ==;
#X obj 362 278 spigot;
#X obj 303 144 symbol;
#X obj 123 9 inlet;
#X obj 362 303 outlet read;
#X obj 512 282 outlet set;
#X obj 124 41 t f f f b;
#X obj 304 85 f \$0;
#X msg 304 111 \$1-rlne;
#X obj 362 235 r \$0-rlne;
#X connect 2 0 0 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 5 0 4 1;
#X connect 5 0 8 0;
#X connect 6 0 0 0;
#X connect 6 1 4 0;
#X connect 7 0 4 1;
#X connect 8 0 9 1;
#X connect 9 0 12 0;
#X connect 10 0 1 0;
#X connect 11 0 14 0;
#X connect 14 1 3 0;
#X connect 14 2 8 1;
#X connect 14 2 13 0;
#X connect 14 3 2 0;
#X connect 14 3 7 0;
#X connect 14 3 15 0;
#X connect 15 0 16 0;
#X connect 16 0 10 0;
#X connect 17 0 9 0;
#X restore 186 199 pd rline;
#X msg 57 2 add gum;
#X obj 337 362 t l l;
#X obj 294 523 spigot;
#X obj 463 467 bang;
#X msg 463 492 1;
#X msg 340 471 0;
#X obj 303 548 list trim;
#N canvas 71 26 1099 687 wline 0;
#X obj 113 805 outlet;
#X obj 671 444 outlet;
#X msg 382 348 rewind;
#X obj 671 416 symbol;
#X obj 325 774 textfile;
#X msg 499 381 clear;
#X obj 200 462 f 0;
#X obj 241 466 + 1;
#X obj 157 436 t b b;
#X obj 176 405 until;
#X msg 220 428 0;
#X obj 509 545 ==;
#X obj 136 629 list prepend add;
#X obj 138 604 spigot;
#X obj 440 583 spigot;
#X obj 442 623 bang;
#X msg 132 465 rewind;
#X obj 60 601 until;
#X msg 21 636 clear;
#X obj 325 799 list prepend add;
#X obj 135 655 list trim;
#X obj 325 824 list trim;
#X text 168 809 to main textfile;
#X obj 884 99 inlet bang;
#X text 786 38 bang at end from main textfile;
#X obj 57 3 inlet;
#X obj 747 481 outlet set;
#X obj 440 652 list;
#X obj 440 702 list prepend add;
#X obj 440 727 list trim;
#X obj 222 524 <;
#X obj 344 540 >;
#X obj 281 692 list prepend add;
#X obj 278 590 spigot;
#X obj 280 718 list trim;
#X obj 276 618 list split 1;
#X obj 279 650 list prepend;
#X text 605 519 smaller than: copy;
#X text 606 532 equal: overwrite;
#X text 604 548 bigger than: update line number;
#X obj 689 310 until;
#X obj 253 60 f 0;
#X obj 255 92 + 1;
#X obj 695 213 t b b b;
#X text 682 188 find length of textfile;
#X obj 170 379 max;
#X obj 67 122 t b b f a f b b;
#X text 344 97 -> length of textfile;
#X msg 757 244 0;
#X obj 256 34 bang;
#X obj 166 347 t f f;
#X obj 696 688 >;
#X obj 640 710 spigot;
#X msg 631 836 add \$1 empty;
#X obj 646 768 ==;
#X obj 597 797 spigot;
#X obj 629 659 t f f f;
#X obj 677 797 spigot;
#X obj 726 770 == 0;
#X text 714 512 if newline number is bigger than the textfile length
;
#X obj 257 123 f;
#X obj 672 732 t f f;
#X obj 759 353 f \$0;
#X obj 680 350 f \$0;
#X msg 759 383 \$1-wlne1;
#X msg 676 383 \$1-wlne2;
#X obj 253 6 r \$0-wlne1;
#X obj 177 549 r \$0-wlne2;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 19 0;
#X connect 4 1 17 1;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 7 0 6 1;
#X connect 7 0 11 0;
#X connect 7 0 30 0;
#X connect 7 0 31 0;
#X connect 7 0 36 1;
#X connect 7 0 56 0;
#X connect 8 0 0 0;
#X connect 8 1 6 0;
#X connect 9 0 8 0;
#X connect 10 0 6 1;
#X connect 11 0 14 1;
#X connect 12 0 20 0;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 27 0;
#X connect 16 0 4 0;
#X connect 17 0 4 0;
#X connect 18 0 0 0;
#X connect 19 0 21 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 23 0 40 1;
#X connect 25 0 46 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 29 0 4 0;
#X connect 30 0 13 1;
#X connect 31 0 33 1;
#X connect 32 0 34 0;
#X connect 33 0 35 0;
#X connect 34 0 4 0;
#X connect 35 1 36 0;
#X connect 36 0 32 0;
#X connect 40 0 0 0;
#X connect 41 0 42 0;
#X connect 42 0 41 1;
#X connect 42 0 60 0;
#X connect 43 0 60 0;
#X connect 43 1 40 0;
#X connect 43 2 48 0;
#X connect 43 2 2 0;
#X connect 43 2 62 0;
#X connect 45 0 9 0;
#X connect 46 0 17 0;
#X connect 46 1 16 0;
#X connect 46 1 18 0;
#X connect 46 2 50 0;
#X connect 46 3 27 1;
#X connect 46 4 30 1;
#X connect 46 4 11 1;
#X connect 46 4 31 1;
#X connect 46 4 26 0;
#X connect 46 4 54 1;
#X connect 46 5 2 0;
#X connect 46 5 63 0;
#X connect 46 6 5 0;
#X connect 46 6 10 0;
#X connect 46 6 43 0;
#X connect 48 0 41 1;
#X connect 48 0 60 1;
#X connect 49 0 41 0;
#X connect 50 0 45 0;
#X connect 51 0 52 1;
#X connect 52 0 61 0;
#X connect 53 0 0 0;
#X connect 54 0 55 1;
#X connect 54 0 58 0;
#X connect 55 0 15 0;
#X connect 56 1 52 0;
#X connect 56 2 51 0;
#X connect 57 0 53 0;
#X connect 58 0 57 1;
#X connect 60 0 45 1;
#X connect 60 0 51 1;
#X connect 61 0 57 0;
#X connect 61 0 55 0;
#X connect 61 1 54 0;
#X connect 62 0 64 0;
#X connect 63 0 65 0;
#X connect 64 0 3 0;
#X connect 65 0 3 0;
#X connect 66 0 49 0;
#X connect 67 0 13 0;
#X connect 67 0 14 0;
#X connect 67 0 33 0;
#X restore 104 200 pd wline;
#X msg 382 55 wline 4 54.4 898 zorro zat 3 90;
#X msg 405 7 wline 8 this is a new list;
#X msg 371 30 wline 1 45 0 1 2 3 4 5 6 7 8 end;
#X msg 194 110 rline 5;
#X msg 269 110 rline 4;
#X obj 150 141 route wline rline;
#X obj 150 31 inlet;
#X obj 291 304 t l l;
#X obj 568 561 outlet end;
#X obj 68 444 spigot;
#X obj 186 380 inlet;
#X msg 95 383 0;
#X msg 186 409 1;
#X obj 373 408 list split 1;
#X obj 291 334 list split 5;
#X obj 620 436 list split 1;
#X obj 665 464 list split 1;
#X text 394 332 preset number isn't needed \, the second value is the
preset name and the next 3 values aren't used yet (possibly in the
future);
#X obj 665 489 symbol;
#X obj 665 514 outlet presetname;
#X connect 0 0 5 0;
#X connect 0 0 26 0;
#X connect 0 1 16 1;
#X connect 0 1 25 0;
#X connect 0 1 28 0;
#X connect 1 0 22 0;
#X connect 2 0 22 0;
#X connect 3 0 22 0;
#X connect 6 0 22 0;
#X connect 7 0 4 0;
#X connect 7 0 14 0;
#X connect 7 1 12 0;
#X connect 8 0 0 0;
#X connect 8 1 5 1;
#X connect 8 2 24 0;
#X connect 9 0 22 0;
#X connect 10 0 11 0;
#X connect 10 1 30 0;
#X connect 11 0 15 0;
#X connect 12 0 13 0;
#X connect 13 0 11 1;
#X connect 14 0 11 1;
#X connect 15 0 4 0;
#X connect 16 0 0 0;
#X connect 16 1 5 1;
#X connect 17 0 22 0;
#X connect 18 0 22 0;
#X connect 19 0 22 0;
#X connect 20 0 22 0;
#X connect 21 0 22 0;
#X connect 22 0 16 0;
#X connect 22 1 8 0;
#X connect 22 2 0 0;
#X connect 23 0 22 0;
#X connect 24 0 31 0;
#X connect 26 0 24 0;
#X connect 27 0 29 0;
#X connect 28 0 26 1;
#X connect 29 0 26 1;
#X connect 30 0 7 0;
#X connect 31 0 32 0;
#X connect 31 1 10 0;
#X connect 32 1 33 0;
#X connect 33 0 35 0;
#X connect 35 0 36 0;
#X restore 421 544 pd vtextfile;
#X obj 29 461 list prepend wline;
#X obj 29 486 list trim;
#N canvas 289 41 450 463 read-one-line 0;
#X obj 63 295 spigot;
#X obj 232 239 bang;
#X msg 232 264 1;
#X msg 109 243 0;
#X msg 148 343 set;
#X obj 156 304 t b b;
#X msg 85 385;
#X obj 7 321 list prepend add2;
#X obj 7 346 list trim;
#N canvas 116 31 673 426 example3 0;
#X obj 19 287 list split 1;
#X obj 19 204 until;
#X obj 19 242 list append;
#X obj 149 287 bang;
#X msg 45 148 1 2 3 4 a b c;
#X text 34 21 example 3: serializing a message without delays;
#X text 17 55 The "until" object can be used as shown to iterate through
all the items of a list.;
#X text 178 147 <- click to test;
#X text 101 171 First store list \, then start the loop;
#X text 118 199 "until" bangs its output until told to stop by a "bang"
to its right inlet.;
#X text 137 241 Store the remaining list.;
#X text 194 286 third outlet of "split" tells us to stop.;
#X text 67 318 Second outlet of "split" becomes the new list for "list
append" above.;
#X text 75 377 First outlet is the output.;
#X obj 72 105 inlet;
#X obj 19 378 outlet;
#X obj 45 171 t b a;
#X connect 0 0 15 0;
#X connect 0 1 2 1;
#X connect 0 2 3 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 1 1;
#X connect 4 0 16 0;
#X connect 14 0 16 0;
#X connect 16 0 1 0;
#X connect 16 1 2 1;
#X restore 113 129 pd example3;
#X obj 102 185 t a a;
#X obj 89 90 t b a;
#X obj 95 17 inlet list;
#X obj 139 214 select ();
#X obj 84 414 outlet;
#X obj 297 168 list split 1;
#X obj 297 193 list trim;
#X obj 297 218 symbol;
#X connect 0 0 7 0;
#X connect 1 0 2 0;
#X connect 2 0 0 1;
#X connect 3 0 0 1;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 5 1 6 0;
#X connect 6 0 14 0;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 9 0 10 0;
#X connect 10 0 0 0;
#X connect 10 1 13 0;
#X connect 11 0 5 0;
#X connect 11 1 9 0;
#X connect 12 0 11 0;
#X connect 13 0 3 0;
#X connect 13 1 1 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X restore 421 581 pd read-one-line;
#X obj 423 262 f;
#X obj 423 287 list prepend rline;
#X obj 423 312 list trim;
#X symbolatom 305 96 12 0 0 1 name - -;
#X obj 275 266 pack f s 0 0 0;
#X obj 275 291 list prepend set;
#X obj 275 316 list trim;
#X msg 124 321 addsemi;
#X obj 150 155 t b b b b b;
#X msg 40 228 write presets/\$1.txt;
#X obj 40 200 symbol \$1;
#X obj 496 174 t b b b;
#X obj 698 330 symbol \$1;
#X msg 807 414 read presets/\$1.txt;
#X obj 698 361 select --DUMMY--;
#X obj 807 386 t a a;
#X text 841 359 only pass different file names;
#N canvas 482 0 751 696 themessage 0;
#X obj 75 2 inlet;
#X obj 681 669 outlet;
#X msg 28 32 1 tutti1 0 0 0 () norm 0 0 2-panrx1 0.401575 () sym 0
0 4-plfry1 C:/Program Files/pd/patch/own/elgitaar-4tet/elgitaar-nagel-noot72-hoogstesnaar.wav
() sym 0 0 4-plfry2 kxpqwmk () sym 0 0 4-plfry3 kxpqwmk () norm 0 0
4-plfrx1 1 () norm 0 0 4-plfrx2 0.970079 () norm 0 0 4-plfrx3 0 ()
norm 0 0 1-adxrx1 0 () sym 0 0 3-plfry1 C:/Program Files/pd/patch/own/elgitaar-4tet/elgitaar-nagel-glis-hoogstesnaar-mm68-1.wav
() sym 0 0 3-plfry2 kxpqwmk () sym 0 0 3-plfry3 kxpqwmk () norm 0 0
3-plfrx1 1 () norm 0 0 3-plfrx2 1 () norm 0 0 3-plfrx3 0 () sym 0 0
2-plfry1 C:/Program Files/pd/patch/own/elgitaar-4tet/elgitaar-plectrum-metfilter-2.wav
() sym 0 0 2-plfry2 kxpqwmk () sym 0 0 2-plfry3 kxpqwmk () norm 0 0
2-plfrx1 1 () norm 0 0 2-plfrx2 1 () norm 0 0 2-plfrx3 0 () sym 0 0
1-plfry1 C:/Program Files/pd/patch/own/elgitaar-4tet/elgitaar-trekken1.wav
() sym 0 0 1-plfry2 kxpqwmk () sym 0 0 1-plfry3 kxpqwmk () norm 0 0
1-plfrx1 1 () norm 0 0 1-plfrx2 0.962205 () norm 0 0 1-plfrx3 0 ()
norm 0 0 1-bflrx1 0 () norm 0 0 1-bflrx2 50.7087 () norm 0 0 1-bflrx3
0 () norm 0 0 1-bflrx4 0 () norm 0 0 1-bflrx5 0 () norm 0 0 1-bflrx6
2.9997 () norm 0 0 1-bflrx7 0 () norm 0 0 1-bflrx8 0 () norm 0 0 1-bflrx9
0 () norm 0 0 1-bflrx10 2.9997 () norm 0 0 1-bflrx11 0 () norm 0 0
1-bflrx12 0 () norm 0 0 1-bflrx13 0 () norm 0 0 1-bflrx14 2.9997 ()
norm 0 0 1-bflrx15 0 () norm 0 0 1-bflrx16 0 () norm 0 0 1-bflrx17
0 () norm 0 0 1-bflrx18 2.9997 () norm 0 0 1-bflrx19 0 () norm 0 0
1-bflrx20 0 () norm 0 0 1-bflrx21 0 () norm 0 0 1-bflrx22 2.9997 ()
norm 0 0 1-bflrx23 0 () norm 0 0 1-bflrx24 0 () norm 0 0 1-bflrx25
0 () norm 0 0 1-bflrx26 2.9997 () norm 0 0 1-bflrx27 0 () norm 0 0
1-bflrx28 0 () norm 0 0 1-bflrx29 0 () norm 0 0 1-bflrx30 2.9997 ()
norm 0 0 1-bflrx31 0 () norm 0 0 1-bflrx32 0 () norm 0 0 1-bflrx33
0 () norm 0 0 1-bflrx34 2.9997 () norm 0 0 1-bflrx35 0 () norm 0 0
1-soutrx1 100 () norm 0 0 1-soutrx2 1 () norm 0 0 1-soutrx3 100 ()
norm 0 0 1-soutrx4 1 () norm 0 0 1-revrx1 0 () norm 0 0 1-revrx2 80
() norm 0 0 1-revrx3 4999.98 () norm 0 0 1-revrx4 0 \;;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 29 427 pd themessage;
#X text 190 580 to all abunch objects;
#X text 122 376 receive lists from every abunch object;
#X obj 702 249 loadbang;
#X obj 716 281 f \$2;
#X msg 801 595 savepresetn bang 0;
#N canvas 164 129 339 300 sendbang 0;
#X msg 111 209 \; \$1 \$2 \$3;
#X obj 111 123 symbol;
#X obj 111 159 pack s 100 f;
#X obj 204 48 inlet;
#X msg 111 98 savepresetn;
#X obj 111 47 inlet;
#X text 229 159 100 = random (is converted to a bang in every abunch
abstraction);
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 2 2;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X restore 246 561 pd sendbang;
#X obj 780 253 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 486 10 1;
#X obj 524 5 inlet;
#X obj 524 28 t b f;
#X obj 426 138 bng 15 250 50 0 printallnames empty print -5 -7 0 10
-4034 -1 -1;
#N canvas 460 57 609 551 printallfilenames 0;
#N canvas 350 21 576 591 identical_symbols 0;
#X obj 195 166 textfile;
#X msg 71 10 koe;
#X obj 90 47 symbol;
#X obj 253 34 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 293 90 clear;
#X obj 115 110 until;
#X obj 113 182 symbol;
#X obj 101 139 t b b;
#X obj 162 289 bang;
#X msg 162 314 0;
#X msg 116 282 1;
#X obj 206 375 == 0;
#X obj 90 72 t s s b s b;
#X msg 301 191 0;
#X obj 206 345 f;
#X obj 164 344 + 0;
#X text 406 193 reset;
#X obj 95 410 spigot;
#X msg 317 462 add \$1;
#X obj 95 484 outlet;
#X msg 111 8 gras;
#X msg 158 9 wei;
#X msg 193 114 rewind;
#X obj 289 125 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 196 196 list trim;
#X obj 193 227 symbol;
#X obj 116 257 select cow;
#X msg 340 192 xyzxprs;
#X text 375 460 write to 'memory' (textfile);
#X obj 293 53 bang;
#X obj 293 20 inlet reset;
#X obj 11 11 inlet;
#X text 27 535 change input group like 'cow' 'grass' 'cow' 'field'
'cow' 'field' to 'cow' 'grass' 'field';
#X obj 18 483 print -n;
#X msg 36 437 \$1.pd;
#X connect 0 0 24 0;
#X connect 0 1 5 1;
#X connect 1 0 2 0;
#X connect 2 0 12 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 5 0 7 0;
#X connect 6 0 26 0;
#X connect 7 0 6 0;
#X connect 7 1 0 0;
#X connect 8 0 9 0;
#X connect 9 0 15 0;
#X connect 10 0 15 0;
#X connect 11 0 17 1;
#X connect 12 1 17 0;
#X connect 12 2 5 0;
#X connect 12 3 6 1;
#X connect 12 4 13 0;
#X connect 12 4 22 0;
#X connect 12 4 27 0;
#X connect 13 0 15 1;
#X connect 14 0 15 1;
#X connect 14 0 11 0;
#X connect 15 0 14 0;
#X connect 17 0 18 0;
#X connect 17 0 19 0;
#X connect 17 0 34 0;
#X connect 18 0 0 0;
#X connect 20 0 2 0;
#X connect 21 0 2 0;
#X connect 22 0 0 0;
#X connect 23 0 0 0;
#X connect 24 0 25 0;
#X connect 25 0 26 1;
#X connect 26 0 10 0;
#X connect 26 1 8 0;
#X connect 27 0 25 0;
#X connect 29 0 4 0;
#X connect 30 0 29 0;
#X connect 31 0 12 0;
#X connect 34 0 33 0;
#X restore 173 110 pd identical_symbols;
#X obj 173 68 r rallnames;
#X obj 52 150 s printallnames;
#X obj 31 204 symbol \$1;
#X obj 130 503 print -n;
#X obj 31 22 inlet bang;
#X obj 224 215 print -n;
#X msg 224 190 (this opened file);
#X obj 31 53 t b b b b b;
#X obj 134 365 print -n;
#X text 181 152 to every abunch abstraction (ask for name);
#X text 271 66 answer from every abunch abstraction;
#X obj 31 317 print -n;
#X msg 168 431 ---------------------------------------------------
;
#X obj 149 396 t b b;
#X msg 31 292 and in the folder abunch/presets: \$1.txt;
#X msg 130 478 all necessary files in the folder abunch:;
#X msg 134 340 presets.pd;
#X connect 1 0 0 0;
#X connect 3 0 15 0;
#X connect 5 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 8 1 2 0;
#X connect 8 2 17 0;
#X connect 8 3 7 0;
#X connect 8 4 0 1;
#X connect 8 4 14 0;
#X connect 13 0 4 0;
#X connect 14 0 16 0;
#X connect 14 1 13 0;
#X connect 15 0 12 0;
#X connect 16 0 4 0;
#X connect 17 0 9 0;
#X restore 667 165 pd printallfilenames;
#X obj 187 17 inlet;
#X connect 2 0 20 0;
#X connect 3 0 29 0;
#X connect 4 0 5 1;
#X connect 4 0 12 1;
#X connect 5 0 16 0;
#X connect 7 0 23 0;
#X connect 8 0 11 0;
#X connect 8 2 15 0;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 11 0 1 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 8 0;
#X connect 15 0 16 1;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 29 0;
#X connect 19 0 29 0;
#X connect 20 0 22 0;
#X connect 20 1 29 0;
#X connect 20 2 19 0;
#X connect 20 3 35 0;
#X connect 20 4 5 0;
#X connect 21 0 8 0;
#X connect 22 0 21 0;
#X connect 23 1 12 0;
#X connect 23 2 24 0;
#X connect 24 0 26 0;
#X connect 25 0 8 0;
#X connect 26 1 27 0;
#X connect 27 0 25 0;
#X connect 27 1 26 1;
#X connect 29 0 9 0;
#X connect 32 0 33 0;
#X connect 32 0 24 0;
#X connect 32 0 37 0;
#X connect 33 0 35 1;
#X connect 33 0 1 1;
#X connect 36 0 33 0;
#X connect 37 0 4 0;
#X connect 38 0 39 0;
#X connect 39 0 23 0;
#X connect 39 1 4 0;
#X connect 40 0 41 0;
#X connect 42 0 7 0;
#X coords 0 -1 1 1 150 110 1 300 50;
